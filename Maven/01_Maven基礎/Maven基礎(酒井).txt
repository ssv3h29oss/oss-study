Maven

MavenはJakarta ProjectのTurbineプロジェクトの成果物として開発された。
現在はAntと同様に、Jakartaの冠をとって、Apache Software Foudation直轄のプロダクトとして開発されている。
Mavenとは「専門家、達人」という意味。
Javaベースのオープンソース製プロジェクト管理ツール。
プロジェクト管理といっても、いわゆる「プロジェクトマネージャ」の仕事をかたがわりしてくれるものではない。

Mavenは内部でAntを使用しており、Antで使用できる全ての組込ターゲットを直接使用できます。
さらにAntでは、拡張タスクとして提供されていた様々な機能を、Mavenではプラグインという形で利用することができます。
プラグインを利用する際には、プロパティファイルを設定するだけでよく、専用のXMLの記述は必要ありません。
またプラグイン自体もコマンド１つでインストールすることができます。
この際、プラグインがインストールされていれば、build.xmlに記述していたようなタスク毎の設定は必要ありません。
必要なのはプロジェクト毎に異なる項目をproject.propertiesファイルに設定するだけです。
　→pom.xml (pomはproject object modelの略、Maven1ではproject.xml) ファイルに必要な情報を記述しておくだけで、
　　ビルドやデプロイ、Jarなどの自動インストールが容易に(自動的に)できる。

機能
・ビルドツール
　　ビルドツールApache Antのようにbuild.xmlを自分で手間をかけて記述することなくプロジェクトのビルドやデプロイができる。
・プロジェクトサイトジェネレータ
　　POMに定義されている情報にアクセスして、HTMLとしてプロジェクトサイトを生成することができる。
　　生成されるHTMLにはPOMに直接記述している情報のほか、ソースコードを利用して生成できるJavadoc、テストレポート、クロスリファレンス、
　　スタイルチェッカ、クラスの依存関係、リポジトリに関するCVS履歴、ChangeLog、などなど、様々な情報が含まれる。
　　つまり、Javadoc、テストレポートなどの生成が容易。
・ライブラリ自動インストーラ
　　、pom.xmlの<dependency>タグにプロジェクトで使用したいJARライブラリ名及びバージョンを指定することで、
　　外部サイトで集中管理されているJARを自動ダウンロードし、ローカルでビルドに使用することができる。
　　オープンソースで開発されているライブラリの他、独自のプロジェクトで開発、使用しているライブラリも、
　　自前のリポジトリを設定することで、同じ様に自動でインストールすることができる。

他
・Git、CVSやSubversionなどのバージョン管理システムにも対応している。
・EclipseなどのIDEに対応したプラグインMevenide, Maven workshop, m2eclipse なども出ている。
・2010年にはMaven 3がリリースされた。
　Maven 1とMaven 2は互換性がかなり低いが、併用することができる。
　Maven 2とMaven 3は互換性の確保が図られている。

何が便利？
Mavenはとくにチームでの開発には有用。
例えば、開発チームでプロジェクトを共有したいとき、開発者の各マシンにMavenをインストールさえしておけば、pom.xmlファイルを
チーム内メンバーに配布し、開発者がMavenのコマンドを一回実行するだけでソースコードやJARライブラリなどを自動的に用意してくれる。
つまり、JARファイルをわざわざ他者に手動でダウンロード、インストール、アップデートさせる手間も省くことができ、pom.xmlファイルと
必要なソースコード、リポジトリに登録されていないJARファイルを配布するだけで済むようになる。
JARを手動でひとつずつダウンロードして設定する必要がない。
なお、リポジトリに登録されていないJARファイルについては自身でリポジトリを作成し、集中管理・配布することも可能となっている。




・Mavenって何？：http://objectclub.jp/technicaldoc/tools/maven/maven01
・はてなダイアリー：http://d.hatena.ne.jp/keyword/Maven
・ウィキペディア：https://ja.wikipedia.org/wiki/Apache_Maven



