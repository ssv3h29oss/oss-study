ビルドツールとしてのMaven
<ビルドツールを使うことの利点>
◆統一したビルドプロセスの提供
開発現場では、「コンパイル → テスト → パッケージ化 → デプロイ」というルーチンを何回も繰り返し行うことになる。
この作業を全て手作業で行った場合、ビルド対象を間違えてしまったり、
デプロイするファイルやデプロイ先サーバを間違えてしまうというリスクがある。
さらにデプロイミスに気づかないままテストをしてしまうと、そのテストが全て無駄になってしまう。
アプリケーションによってはコンパイルやデプロイに何分もかかるものもあるため、こうしたミスがあるとかなりのタイムロスになってしまう。
→ビルドツールを使って自動化することで、プログラムのコンパイルからデプロイまでの作業を、毎回同じ手順で正確に行うことができ、工数削減に繋がる



<Mavenでできること>
◆プロジェクトの作成からデプロイまでの作業を共通のコマンドで実施
各々の操作はmvnコマンドで行うことができる。

1.プロジェクトの作成
mvn archetype:create
2.コンパイル
mvn compile
3.テスト
mvn test
4.パッケージ化
mvn package
5.デプロイ
mvn deploy

※プロジェクトに関する設定はpom.xmlに記述しておくことで、ソースコードの場所やクラスファイルの出力先、デプロイ先のサーバ等を指定できる。


◆プロファイル
Mavenには、環境ごとにビルド手順や依存ライブラリ、接続先サーバ等を切り替える仕組み「プロファイル」がある。
プロファイルはpom.xmlに記述する。

<project ...>
    ...
    <profiles>
        <profile>
            <id>＜プロファイルの ID＞</id>
            <activation>
                ＜プロファイルが有効化する条件＞
            </activation>
            ＜このプロファイルでの設定＞
        </profile>
        <profile>
            ...
        </profile>
    </profiles>
    ...
</project>

＜プロファイルの ID＞ 
そのプロファイルを識別するためのユニークな値を指定。

＜プロファイルが有効化する条件＞ 
どういう場合にプロファイルが有効となるのか、という条件を記述。
プロファイルが有効化される条件には以下のものがある。
・コマンドライン引数
・settings.xml の activeProfiles 要素
・デフォルト
・JDK のバージョン
・OS の種類
・システムプロパティ
・ファイルの有無

＜このプロファイルでの設定＞
このプロファイルが有効化されたときに使用される設定を記述。
例：
・repositories	ライブラリのリポジトリ
・pluginRepositories	プラグインのリポジトリ
・dependencies	ライブラリの設定
・plugins	プラグインの設定
・properties	プロパティの設定
・modules	モジュールの設定
・reporting	レポートの設定
・dependencyManagement	依存性管理の設定



◆ライブラリの依存関係を管理
アプリケーションを動かすのに必要なライブラリをpom.xmlに記述しておくことで、必要なライブラリは自動的にダウンロードされ、コンパイル時には自動的にクラスパスへ追加してくれる。


<Antと比較した利点>
Antは、プロジェクトのディレクトリ構成の決定や、コンパイルやJARファイル作成のためのタスクの記述など、実際の開発に入る前に色々な作業を行わなければいけない。（設定ファイルの記述が必要）
Mavenの場合は多くがデフォルトが決められているため、プロジェクトの構成などに迷う必要はないし、必要な作業は始めからコマンド一つで行うことができる。


<プロジェクトサイトジェネレータ>
以下のコマンドを実行することで、プロジェクトサイトを作成することができる。
mvn site
作成されたWebページは，target/siteディレクトリに出力される。
pom.xmlの中に，チームの構成やメーリングリスト，ライセンス関連やソースコードのリポジトリなどの情報が記述されていれば，それらが出力されるWebページに反映される。また、対象のプロジェクトが必要とする依存ライブラリの情報に関しても，しっかりとWebページに反映される。
それ以外にも、単体テスト結果や網羅率，JavadocやCheckstyleなどの実行結果といった各種レポートも出力することができる。


参考文献
Maven2によるビルド入門
http://www.nulab.co.jp/kousei/chapter4/02.html
サイトレポートを使ってみる
http://objectclub.jp/technicaldoc/tools/maven/maven04
maven2のsiteゴールによるレポートの出力
https://www.eisbahn.jp/yoichiro/2007/02/maven2site.html