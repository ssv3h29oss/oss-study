Gitとは
一言で言うなら、プログラムのソースコードなどの変更履歴を記録・追跡するための分散型バージョン管理システムである。
巨大プロジェクトにも対応できるように、動作速度に重点が置かれている。
バージョン管理システムと言えば、SVNがある。SVNを使っている人も多いと思うが、こちらは集中型である。
集中型と分散型の特徴を挙げる。
＜集中型＞
・1つのリポジトリを全員で共有する
・コミットやログの確認などの全ての処理は基本的にネットワーク経由
・ネットワークが切断されると、コミットなどがまったくできない
・リポジトリがおかれているサーバーがクラッシュすると、情報が失われる

＜分散型＞
・サーバーにリモート(共有)リポジトリ、各ユーザのローカルにローカルリポジトリがある
・ローカルリポジトリはリモートリポジトリの完全な複製(履歴などの全情報を含む)
・ネットワークが切断しても、ローカルのみで履歴の調査などほとんどの作業を実施できる
・ローカルに完全な複製があるため、リモートリポジトリがクラッシュしても、復旧が容易
・ローカルリポジトリにリモートリポジトリの複製を作るのに時間がかかる

Gitでは、ローカルリポジトリにコミット→リモートリポジトリに反映(プッシュ)という手順で操作するため、修正中のソースをコミットしてもリモートにプッシュするまで他の開発者に影響が出ない。
修正途中のソースでもコミットできるため、試行錯誤の履歴を残しておけるなどの利点がある。
また、ブランチが簡単に切れたり、マージの機能が強力だったりというような特徴がある。

詳しい説明やコマンド等は以下を参照してほしい。

いつやるの？Git入門：http://www.slideshare.net/matsukaz/git-17499005?next_slideshow=1
こわくないGit：http://www.slideshare.net/kotas/git-15276118
Gitの基礎練習：http://www.hyuki.com/techinfo/gitinit.htmlSubversion
ユーザーが Git を使ってみた (基本操作編)：http://www.machu.jp/diary/20100506.html#p01
Git の基礎勉強 ?Git によるバージョン管理を使う：http://tracpath.com/bootcamp/learning_git_firststep.html


図がほしい
http://www.atmarkit.co.jp/ait/articles/1307/05/news028_3.html