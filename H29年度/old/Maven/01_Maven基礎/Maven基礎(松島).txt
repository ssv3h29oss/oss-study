<Mavenとは>
・Java用プロジェクト管理ツール
Maven は Project Object Model (POM) という考え方に基づき、プロジェクトのビルド、テスト、ドキュメンテーション、成果物の配備など、プロジェクトのライフサイクル全体を管理する。
プロジェクトのビルドツールである Ant とは異なり、Maven はプロジェクト管理ツールとして、プロジェクトに関する色々な情報を POM に集約し、POM の情報に基づきプロジェクト全体を管理する。


<Mavenを使ってできること>
・プロジェクトのディレクトリ構成を推奨
Mavenで作成したプロジェクトは、標準のディレクトリ構成が決められている。
ディレクトリ構成を最初から決めておくことで、以下のメリットがある。
1.誰が見てもどこに何があるかわかる。
2.新しいプロジェクトを作る時に、ディレクトリ構成等を自分で考える必要もない。
3.Mavenを利用した他のプロジェクトもすぐに理解できる。
（既存のプロジェクトを後からmavenでビルドできるようにしよう、というのは少し困難な様）

・ライブラリの自動インストール（依存性の管理）
MavenはPOMのdependenciesで定義している依存関係のあるライブラリをリモートリポジトリより自動取得して、ローカルリポジトリにインストールする機能がある。
この機能のおかげで、プロジェクト毎にライブラリを自前でインストールしたり、ライブラリ自体をCVSに格納せずともライブラリが利用できる。
チーム開発をする際にライブラリのバージョンを統一することができ、バージョンを上げる際もバージョン番号を変更すればすむ。そのため、「一部の開発者が古いライブラリのままテストを実施してしまった為、テストのやり直しをする必要がある！」ということもなくなる。
（ビルドパスにも勝手に追加してくれる）

・ビルドツール
プロジェクトに関する情報をpom.xmlに書いておくことで、
mvnコマンドを使ってコンパイルやテスト、デプロイなどが行える。
そのため毎回決まった手順でビルドを行える。（統一したビルドプロセスの提供）
（コンパイル→テスト→jar作成→デプロイ）

・プロジェクトサイトジェネレータ
プロパティファイルの設定だけでJavadoc等が自動で作成できる。


<参考文献>
・Mavenについてまとめてみました
http://qiita.com/tikuase/items/8546357f4e67357fe730
・ビルドツールとは？
http://qiita.com/Mura-Mi/items/225825cc3715dc04d923
・ビルド管理ツール Maven とは？
http://www.spinachmedia.info/entry/2014/04/26/174644
