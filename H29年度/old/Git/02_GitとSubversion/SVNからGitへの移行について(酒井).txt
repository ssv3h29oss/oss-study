SVN→Git移行

1.SVNからGitへの移行の検討
SVNからGitに移行するに当たって、まずは、どのように運用していくかを考える必要がある。
どんな運用をするのか、そのために何が必要なのかとういう検討は、Gitへの移行だけでなく、ほかの移行やPJ開始時などにも行うことであり、特に特別なことでもない。
どうしても、Gitは難しいというイメージなどから移行に不安があるのなら、以下のような方法はどうだろう。
Gitは分散型ではあるが、SVNと同じような運用もできる。慣れ親しんだ運用であるため、開発者の戸惑いが少なくなり、Gitの学習もプッシュやフェッチといった基本的な部分だけで十分作業できる。つまり、学習コストが少ない。
中央管理型のままでも良いが、Gitに慣れたころに、もっとGitの性能を活かした運用に移行していくというのもひとつの手であろう。いきなりGitをバリバリ使えと言われても難しいと感じるかもしれないが、Gitを中央管理型で使うというワンクッションをおくことで、緩やかにGitへ移行していくことができる。
(中央管理型で使っている間にGitに対する戸惑いも少なくなり、ゆっくりとGitの学習もできる)
もちろん、はじめから分散型として運用していくこともできる。この場合は、運用前にしっかり教育しておかないと混乱を招く恐れもあるため、学習も含めた移行計画を練ったほうが良いかもしれない。
***参考***
Git ワークフロー：https://www.atlassian.com/ja/git/workflows#!workflow-overview

続いて、Gitを使用するときに必要なもの、あったほうが良いものを検討する。
＜GUI＞
SVNでもTortoiseSVNなどを使っているのではないだろうか？同じように、GitにもGit用のGUIツールがいくつか存在するため、「コマンドを覚えなければ！」などと思いつめる必要はない。
たとえば、TortoiseGit。これは前述のTortoiseSVNとベースは同じで使用感もよく似ている。もし、TortoiseSVNユーザーであるなら、TortoiseGitがお勧めである。
ほかにも、GitGUIやSourceTreeなどがある。
もちろん、CUIで使っても良いと思う。
***参考***
Windows: Git GUIを使う準備：http://sutara79.hatenablog.com/entry/2015/07/06/113431
Windows / Mac 有名どころ Git クライアント比較：https://wp-d.org/2013/02/04/2392/

＜ホスティングサービス＞
Gitには、ホスティングサービスが豊富なことも魅力のひとつであると思う。
Git サーバーを立ち上げる作業が面倒なら、外部の専用ホスティングサイトに Git プロジェクトを置くという選択肢がある。
ホスティングサイトでプロジェクトを立ち上げるのは簡単ですし、サーバーのメンテナンスや日々の監視も不要になる。
たとえば、GitHub。1番有名なGit用ホスティングサービスである。便利機能もいろいろあるので、たくさんのユーザーが使用している。
ただし、外部にソースを置きたくないというなら、GitLabなどのように自社サーバーにインストールし運用するものもある。
***参考***
Gitホスティングサービス5選【比較表付き】：http://www.find-job.net/startup/5-git-hosting
GitHubのようなgitホスティングサービス5つを比較してみた。http://bitwave.showcase-tv.com/git%E3%83%9B%E3%82%B9%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%AF%94%E8%BC%83part%EF%BC%91/

ここまでで、最低限必要な検討の説明はできたと思う。
SVNからGitへの移行は特に特別なことではなく、ほかの移行やPJ開始時の検討と同じようなことを考え、検討すればよい。
Gitに少しでも魅力を感じたなら、移行を検討してみてほしい。

2.移行手順
ここからは、移行手順を簡単に説明する。
移行前に、いらないファイルは削除しておくことをお勧めする。
なぜなら、容量が多いと移行に時間がかかるからである。
いらないファイルを削除して、きれいな状態にしておくことは、普段から実施しておいたほうが良いことではある。

＜前提＞
・Git for Windowsがあらかじめインストールされていること
　(git svn ユーティリティが使用できる状態であること)
・Git移行後の運用の検討が完了していること
・Gitのホスティングサービスの検討が完了していること(GitHub、Bitbuket、GitLabなど)
・Gitのリモート(共有)リポジトリが作成されていること


＜手順＞
※基本的に移行担当者のローカルで作業する
(1)前準備
(2)SVNのリポジトリをGitリポジトリ(ローカル)に変換
(3)リモートリポジトリへローカルリポジトリをプッシュ
(4)開発者(PJメンバー)にGit導入
(5)SVNリポジトリを凍結し、Gitへ移行


(1)前準備
　①オーサー情報作成
　・Gitではユーザ名＋メールアドレスが必要であるため、以下のようなファイルを作成する
　　ファイル名：svnauthors.txt(ファイル名は任意)
　　　taro = taro <taro@test.com>
　　　hanako = hanako <hanako@test.com>
　②SVNをローカルに配置後、Gitリポジトリに変換する場合は、Subversionのサーバからリポジトリのディレクトリ丸ごと取得してローカルのWindows上の配置する。

(2)SVNのリポジトリをGitリポジトリ(ローカル)に変換
　①git svn ユーティリティを使用して、変換を実施する。
　　git svn clone または git svn init + git svn fetch を使用する。
　　***cloneの例***
　　・SVNリポジトリ→Gitローカルリポジトリ
　　　git svn clone -A オーサー情報のファイル名 -s --prefix=svn/ SVNリポジトリ
　　　例)オーサーファイル名：svnauthors.txt　リポジトリのディレクトリ：https://your.svn/repos/project
　　　git svn clone -A svnauthors.txt -s --prefix=svn/ https://your.svn/repos/project
　　・SVNリポジトリのディレクトリ→Gitローカルリポジトリ
　　　git svn clone -A オーサー情報のファイル名 -s --prefix=svn/ 1で取得したSVNリポジトリのディレクトリ
　　　例)オーサーファイル名：svnauthors.txt　リポジトリのディレクトリ：C:\temp\にmyapp
　　　git svn clone -A svnauthors.txt -s --prefix=svn/ file:///c/temp/myapp
　
　②無事Cloneができたら、SVNのブランチとタグをGit側に反映する。
　　実は、git svn clone コマンドでは、SVN ブランチはリモートブランチとして取り込まれ、SVN タグはtags/ というプレフィックスが付加されたブランチとして取り込まれるため、変換する作業 (クリーンアップ) が必要となる。
　　 a.ブランチを作成
　　 b.タグを作成
　　 c.a～bブランチとタグの数だけ繰り返す

(3)リモートリポジトリへローカルリポジトリをプッシュ
　作成したGitのローカルリポジトリをリモートリポジトリへプッシュする。
　ただし、開発をストップできない場合などは、SVNとGitを併用する移行期間を設けて、差分を適用しながら開発を進める。
　・SVNの差分をGitへ取り込む手順の例
　　a.Subversion側の修正をすべて取得
　　b.リモートのGitリポジトリでの修正を取得
　　c.Gitリポジトリのブランチをcheckout
　　d.Gitのfeature-aへSubversionのfeature-aをマージ
　　e.Gitのリモートリポジトリへpush
　Gitの差分をSVNへ取込むこともできるが、移行完了まではSVNのみで開発することを勧める。
　両方を編集しては、コンフリクトなどトラブルの原因となる。
　そのため、開発(コミット)はSVNだけとして、定期的にGitへ取込むようにする。
　

(4)開発者(PJメンバー)にGit導入
　開発者にGit for Windowsをインストールさせ、リモートリポジトリをクローンさせる。
　この作業(Gitで開発できる環境を整える)が全員完了するまでは、SVNのみにコミットさせること。
　(3)でも書いたが、トラブルの原因となるため、徹底させること。
　全員の作業が完了するまでは「SVNコミット→Gitへ取込み」を繰り返す。

(5)SVNリポジトリを凍結し、Gitへ移行
　全員の環境が整ったら、Gitへの差分反映をもう一度実施し、SVNリポジトリを凍結する。
　その後、Gitリポジトリを使用した開発へ移る。


細かいコマンド等は以下を参照してほしい。
移行時の細かい注意点なども載っている。

＜参考＞
Gitへの移行：https://www.atlassian.com/ja/git/migration#!migration-overview
Windowマシンで行う git-svnでのSubversionからGitへの移行方法：http://qiita.com/mookjp/items/9ae307e15d17796c1295
SubversionからGitへ移行してみた：http://qiita.com/EichiSanden/items/326bdac596485baa6086
git-svnでSVN→Gitへの移行をやってみたログ：http://qiita.com/hidekuro/items/4727715fbda8f10b6b11


