■Jenkinsとは
Javaで書かれたオープンソース継続的インテグレーション（CI）ツール。
ソフトウェア開発向けに継続的インテグレーションサービスを提供しており、
Apache TomcatなどのServletで動作しているサーバーベースシステムである。
ソフトウェア開発プロジェクトなどにおける「ビルド」「デプロイ」「テスト」などの
作業自動化/効率化を支援する。
Jenkinsの役割は、あくまで作業自動化/効率化を支援すること。
バージョン管理システム（SVNやGit）やビルドツール（AntやMaven）と連携することで自動化や効率化を実現する。

■Jenkinsでできること
・ビルドの自動化
　バージョン管理システム（SVNやGit）と連携し、ソースがコミットされたタイミングでビルドが実行される。
・デプロイの自動化
　Jenkinsはビルドしたプログラムを開発サーバや本番サーバにデプロイすることができる。
・テストの自動化
　JenkinsはJUnit等のテストフレームワークを使ったテストができる。
・テストのカバレッジの収集
　テスト結果の解析ができる。
　※カバレッジとは：所定の網羅条件がテストによってどれだけ実行されたかを割合で表したもの。
・静的コード解析の自動化
　JenkinsはCheckstyle、FindBugs、Step Counter等の静的コード解析ができる。

■Jenkinsの特徴
・操作のしやすさ
　Jenkinsはサーバーにインストールして利用するタイプのCIツール。
　Webブラウザ経由で設定や管理を行えるGUIが提供されており、ほぼすべての操作をGUIで行える。
・複数プロジェクトで共用可能
　Jenkinsでは「ジョブ」という単位で実行する処理を管理する。
　複数のジョブを1つのJenkinsで管理でき、複数のプロジェクトで1つのJenkinsを共用することも可能。
・汎用性が高い
　JenkinsはJavaで実装されており、Java実行環境が用意されているさまざまなプラットフォームで動作する。
　Linux/Windows/Macなど、どの環境でも、さまざまな種類/言語のスクリプトを実行できる。
・拡張性が高い
　プラグインで機能を拡張できる。
　プラグインを検索・インストールする機能もJenkins本体に用意されており、容易にプラグインを導入できる。

■継続的インテグレーション（CI）ツールとは
英：Continuous[継続した] Integration[結合]
元々は「ソフトウェアの開発コストを下げるためには開発の初期から頻繁にテストを行って
フィードバックを行うべき」という考え方から生まれた言葉。
ソフトウェア開発において、ビルドやテストを頻繁に繰り返し行なうことにより問題を
早期に発見し、開発の効率化・省力化や納期の短縮を図る手法。 
特に、専用のツールを用いてこのプロセスを自動化あるいは半自動化し、効率的に
実施する方式。

■継続的インテグレーション導入のメリット
CI導入の目的は、開発の効率化・省力化や納期の短縮を図ることである。
具体的には、下記のようなこと。
・手戻りの削減、品質の維持
・環境に依存しない
・自動化による作業コストの削減
・継続的に改善し続けられる
なぜ、このような効果が得られるか。Jenkinsの機能を例にするとこのようになる。
・さまざまなプラットフォームで動作する→環境に依存しない
・ビルド、デプロイなどが自動化できる
　→決まったトリガーで動作するため、うっかり忘れるというミスが無い。
　→自動で行われるため、作業コストの削減になる。
　→手順を覚える必要が無いため、作業が個人に依存しない。(誰でもできる)
・コミット時にビルドやテスト、静的解析が行われる
　→早い段階で不具合が発見できるため、品質の維持・向上につながり、手戻りも発生しにくい。
　→自動で必ず実行されるため、継続的に改善し続けられる。
　
■継続的インテグレーション導入のデメリット
導入に対するコストが大きい
・自社のプロジェクトに最適なCI環境を調査しなければならない
・導入手順を調査しなければならない
　(環境構築がうまくいかなかった場合、さらに工数がかかる可能性がある)
・構築する工数を確保しなければならない
・外部ツールと連携させる方法を調査しなければならない

■まとめ
Jenkinsは継続的インテグレーションツールであり、ソフトウェア開発プロジェクトなどにおける
「ビルド」「デプロイ」「テスト」などの作業自動化/効率化を支援する。
導入は調査等、大きなコストがかかるが、継続的にビルドやテストを繰り返すことにより問題を早期に発見し、
開発効率化が図れたり自動化による作業コストの削減ができるなど、メリットも大きい。
最終的にはメリットのほうが大きくなると考えられるので、導入は是非お勧めしたい。



Jenkins環境で行う自動静的解析テスト：https://www.techmatrix.co.jp/product/cisolution/service/index.html
