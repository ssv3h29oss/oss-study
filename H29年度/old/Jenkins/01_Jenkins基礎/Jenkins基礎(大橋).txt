■Jenkinsとは

	Javaで書かれたオープンソース継続的インテグレーション（CI）ツール。

	ソフトウェア開発向けに継続的インテグレーションサービスを提供しており、
	Apache TomcatなどのServletで動作しているサーバーベースシステムである。

	CVS、Subversion、Git、Mercurial、Perforce、Clearcaseといったバージョン管理システムツールに対応し、
	Apache AntやApache Mavenにおける任意のシェルスクリプトやWindowsバッチコマンドといったプロジェクトを実行することが出来る。

	

■CI（継続的インテグレーション）とは

	Continuous Integration の略。
	
	日々行っていることで自動化できるものは自動化して素早い開発を行うためのサービス。
	
	CI（Jenkins）ツールを導入することで、下記のことを自動化できる。

		・アプリケーションのビルド、およびサーバーへのアプリケーションのデプロイ

		・テストのカバレッジの収集
			※カバレッジとは：所定の網羅条件がテストによってどれだけ実行されたかを割合で表したものです。 
		
		・FindBugsやPMDを使用した静的解析、およびレポート作成

		これらを自動化することで、ファイルの反映もれや人的ミスを防ぐことができる
			→工数削減＆品質向上

	



■Jenkinsの特徴

	Jenkinsはサーバーにインストールして利用するタイプのCIツールだが、
	Webブラウザ経由で設定や管理を行えるGUIが提供されており、ほぼすべての操作をGUIで行える。

	Jenkinsでは「ジョブ」という単位で実行する処理を管理する。
	複数のジョブを1つのJenkinsで管理でき、複数のプロジェクトで1つのJenkinsを共用することも可能

	プラグインで機能を拡張できる。
	プラグインを検索・インストールする機能もJenkins本体に用意されており、容易にプラグインを導入できる

	JenkinsはJavaで実装されており、Java実行環境が用意されているさまざまなプラットフォームで動作する。
	Linux上で使われているケースが多いが、WindowsやMac OS Xでの利用も可能



■ほかのCIツールよりJenkinsのほうが優れている点

	拡張性に優れている。（プラグインを作成・利用することで機能を拡張できる）




■Jenkins（CIツール）を導入することで、下記のことを自動化できる。

	・アプリケーションのビルド、およびサーバーへのアプリケーションのデプロイ
	・テストのカバレッジの収集
	・FindBugsやPMDを使用した静的解析、およびレポート作成

	これらを自動化することで、ファイルの反映もれや人的ミスを防ぐことができる
		→工数削減＆品質向上






■Jenkins 2.0について

	2016年4月に正式リリース

	今までプラグインとして提供されていた「Pipelineプラグイン」が標準搭載された。

	UIが改善されている
	
	1.xと完全な互換性を保つ




参考URL
・Jenkinsを使った自動テスト環境を作る（前編）
http://knowledge.sakura.ad.jp/knowledge/5293/

・サルでもわかるJenkins入門?
https://ics.media/tutorial-jenkins

・Jenkinsではじめる継続的インテグレーション
https://www.slideshare.net/linoSth/jenkins-10666679?next_slideshow=2

・Jenkinsで実現するJava EEアプリケーションの自動ビルドと自動デプロイ
https://codezine.jp/article/detail/7929

・Jenkins2.0(日本語)
https://www.slideshare.net/kohsuke/jenkins-20