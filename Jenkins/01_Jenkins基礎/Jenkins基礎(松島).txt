■Jenkinsとは
継続的インテグレーション（CI）ツール。
当初は「Hudson」という名称でリリースされていたCIツールで、2011年に発生したOracleとの商標問題を受けて現在の「Jenkins」という名称に変更された。

■CIツールとは
CIは、元々は「ソフトウェアの開発コストを下げるためには開発の初期から頻繁にテストを行ってフィードバックを行うべき」という考え方から生まれた言葉で、継続的にテストやビルドなどの作業を繰り返すことなどを指している。

CIツールでは「特定のイベントをトリガーにしてあらかじめ指定しておいた処理を実行する」という機能が提供される。トリガーとして利用できるイベントはツールによって異なるが、たとえば毎日特定の時間にビルドを実行したり、バージョン管理ツールへのコミットをトリガーにしてビルドを実行する、といったことが可能。

■CIツールを使うメリット
・バージョン管理システムにコミットするだけでビルド、デプロイを自動的に行ってくれる。
・CIは頻繁にビルドを行うため、想定外のバグが起こったときに素早く検知できる。
・ビルド作業が誰にでもできるようになる

■Jenkinsを使った開発の流れ
1. 開発メンバーがソースコードをコミットすると、Jenkinsが更新を検知し、ビルドツールをキックする。
2. あらかじめ設定しておいた手順に従って、ビルド/テストが実行される。
3. ビルド/テストが完了したら、Jenkinsは、Webページやメールなどに結果を出力する。

エラー箇所について、開発メンバーが修正を行い、ビルド/テストを繰り返して、エラーがゼロになるまで繰り返せば、手順書レベルの品質をクリアできていることになる。

■Jenkinsの特徴
・非常に高い汎用性
Linux/Windows/Macなど、どの環境でも、さまざまな種類/言語のスクリプトを実行できる。

・幅広いトリガー
「バージョン管理システムのコミット」「スケジューリング」「他のビルドが完了した時」「特定のビルドURLによるリクエスト」などさまざまなトリガーで実行させることができる。

・プラグインによる拡張性
プラグインを作成/利用することで機能を拡張できる。
プラグインが充実している点も特徴。

・バージョン管理システムとの連携
バージョン管理システムと連携し、自動的にプロジェクトを構成するソースコードを集め、コンパイルして実行可能な状態にビルドする。

「CVS」「Subversion」「Git」「Mercurial」「Perforce」「Clearcase」など多くのバージョン管理システムに対応している。



参考
さくらのナレッジ
http://knowledge.sakura.ad.jp/knowledge/5293/

OSS NEWS
https://www.ossnews.jp/oss_info/Jenkins

CodeZine
https://codezine.jp/article/detail/7929
